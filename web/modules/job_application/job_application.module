<?php

/**
 * @file
 * Primary module hooks for job_application module.
 */

use Drupal\Core\Render\Element;
use Drupal\user\UserInterface;

/**
 * Implements hook_theme().
 */
function job_application_theme(): array {
  return [
    'job_application' => ['render element' => 'elements'],
  ];
}

/**
 * Prepares variables for job applications templates.
 *
 * Default template: job-application.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the job applications information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_job_application(array &$variables): void {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_user_cancel().
 */
function job_application_user_cancel($edit, UserInterface $account, $method): void {
  switch ($method) {
    case 'user_cancel_block_unpublish':
      // Unpublish job applicationss.
      $storage = \Drupal::entityTypeManager()->getStorage('job_application');
      $job_application_ids = $storage->getQuery()
        ->condition('uid', $account->id())
        ->condition('status', 1)
        ->accessCheck(FALSE)
        ->execute();
      foreach ($storage->loadMultiple($job_application_ids) as $job_application) {
        $job_application->set('status', FALSE)->save();
      }
      break;

    case 'user_cancel_reassign':
      // Anonymize job applicationss.
      $storage = \Drupal::entityTypeManager()->getStorage('job_application');
      $job_application_ids = $storage->getQuery()
        ->condition('uid', $account->id())
        ->accessCheck(FALSE)
        ->execute();
      foreach ($storage->loadMultiple($job_application_ids) as $job_application) {
        $job_application->setOwnerId(0)->save();
      }
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_predelete() for user entities.
 */
function job_application_user_predelete(UserInterface $account): void {
  // Delete job applicationss that belong to this account.
  $storage = \Drupal::entityTypeManager()->getStorage('job_application');
  $job_application_ids = $storage->getQuery()
    ->condition('uid', $account->id())
    ->accessCheck(FALSE)
    ->execute();
  $storage->delete(
    $storage->loadMultiple($job_application_ids)
  );
}
